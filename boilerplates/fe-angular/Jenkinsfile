def final projectId = '@project_id@'
def final componentId = '@component_id@'
def final credentialsId = "${projectId}-cd-cd-user-with-password"
def sharedLibraryRepository
def dockerRegistry
node {
  sharedLibraryRepository = env.SHARED_LIBRARY_REPOSITORY
  dockerRegistry = env.DOCKER_REGISTRY
}

library identifier: 'ods-library@0.1-latest', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: sharedLibraryRepository,
   credentialsId: credentialsId])

// See readme of shared library for usage and customization.
odsPipeline(
  image: "${dockerRegistry}/cd/jenkins-slave-nodejs8-angular",
  projectId: projectId,
  componentId: componentId,
  verbose: true
) { context ->
  stageBuild(context)
  stageUnitTest(context)
  stageLint(context)
  stageScanForSonarqube(context)
  stageCreateOpenshiftEnvironment(context)
  stageStartOpenshiftBuild(context)
  stageDeployToOpenshift(context)
  stageTriggerAllBuilds(context)
}

def stageBuild(def context) {
  stage('Build') {
    withEnv(["TAGVERSION=${context.tagversion}", "NEXUS_HOST=${context.nexusHost}"]) {
      sh "yarn install"
      sh "yarn build"
    }
    sh "cp -r dist/${context.componentId} docker/dist"
  }
}

def stageUnitTest(def context) {
    stage('Unit Test') {
      sh "yarn test -- --single-run --progress false"
    }
}

def stageLint(def context) {
  stage('Lint') {
    sh "npm run lint"
  }
}
