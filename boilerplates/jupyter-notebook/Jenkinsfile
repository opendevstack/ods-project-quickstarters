def final projectId = '@project_id@'
def final componentId = '@component_id@'
def final credentialsId = "${projectId}-cd-cd-user-with-password"
def sharedLibraryRepository
def dockerRegistry
node {
  sharedLibraryRepository = env.SHARED_LIBRARY_REPOSITORY
  dockerRegistry = env.DOCKER_REGISTRY
}

library identifier: 'ods-library@production', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: sharedLibraryRepository,
   credentialsId: credentialsId])

// See readme of shared library for usage and customization.
odsPipeline(
  image: "${dockerRegistry}/cd/jenkins-slave-base",
  projectId: projectId,
  componentId: componentId,
  branchToEnvironmentMapping: [
    'master': 'test',
    '*': 'dev'
  ]
) { context ->
  patchBuildConfig(context)
  stageStartOpenshiftBuild(context)
  stageDeployToOpenshift(context)
}

private void patchBuildConfig(def context, def componentId = null) {
    sh """oc patch bc ${componentId ?: context.componentId} --type=json --patch '[
    {"op": "replace", "path": "/spec/strategy/dockerStrategy", "value":{"buildArgs":[
        {"name": "NEXUS_URL" ,"value": "${context.nexusHost}"},
        {"name": "NEXUS_USERNAME" ,"value": "${context.nexusUsername}"},
        {"name": "NEXUS_PASSWORD" ,"value": "${context.nexusPassword}"}]}},
    ]' -n ${context.targetProject}"""
}