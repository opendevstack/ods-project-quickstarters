apiVersion: v1
kind: Template
labels:
  template: cd-jenkins-webhook-proxy-template
metadata:
  annotations:
    description: Jenkins webhook proxy
  name: cd-jenkins-webhook-proxy
objects:
- apiVersion: v1
  kind: Route
  metadata:
    annotations: {}
    labels:
      template: cd-jenkins-webhook-proxy
      app: jenkins-webhook-proxy
    name: webhook-proxy
  spec:
    host: webhook-proxy-${PROJECT}-cd.${OD_OCP_SOURCE_APP_DOMAIN}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: webhook-proxy
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    labels:
      template: cd-jenkins-webhook-proxy
      app: jenkins-webhook-proxy
    name: webhook-proxy
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: jenkins-webhook-proxy
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      template: cd-jenkins-webhook-proxy
      app: jenkins-webhook-proxy
    name: webhook-proxy
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: jenkins-webhook-proxy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations: {}
        labels:
          app: jenkins-webhook-proxy
      spec:
        containers:
        - env:
          - name: REPO_BASE
            value: '${REPO_BASE}'
          - name: TRIGGER_SECRET
            valueFrom:
              secretKeyRef:
                key: trigger-secret
                name: webhook-proxy
          image: ' '
          imagePullPolicy: Always
          name: webhook-proxy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - webhook-proxy
        from:
          kind: ImageStreamTag
          name: jenkins-webhook-proxy:latest
          namespace: '${NAMESPACE}'
      type: ImageChange
- apiVersion: v1
  kind: Secret
  metadata:
    name: webhook-proxy
    labels:
      app: jenkins-webhook-proxy
  type: opaque
  data:
    trigger-secret: ${PIPELINE_TRIGGER_SECRET}
parameters:
- name: PROJECT
  required: true
- name: OD_OCP_SOURCE_APP_DOMAIN
  required: true
- name: NAMESPACE
  value: cd
- name: REPO_BASE
  required: true
- name: PIPELINE_TRIGGER_SECRET
  required: true
