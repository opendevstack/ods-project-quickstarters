apiVersion: v1
kind: Template
labels:
  template: component-template
  app: '${PROJECT}-${COMPONENT}'
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[]'
      labels:
        branch: '${BRANCH}'
      name: '${COMPONENT}'
    spec:
      ports:
      -   name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: '${PROJECT}-${COMPONENT}'
        deploymentconfig: '${COMPONENT}'
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: '${COMPONENT}'
    spec:
      dockerImageRepository: '${COMPONENT}'
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
      name: ${COMPONENT}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${COMPONENT}:${TAGVERSION}
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        type: Binary
        binary: {}
      strategy:
        type: Docker
        dockerStrategy: {}
      successfulBuildsHistoryLimit: 5
      triggers: []
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        branch: '${BRANCH}'
      name: '${COMPONENT}'
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: '${PROJECT}-${COMPONENT}'
        deploymentconfig: '${COMPONENT}'
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: '${PROJECT}-${COMPONENT}'
            deploymentconfig: '${COMPONENT}'
            env: '${ENV}'
        spec:
          containers:
            - image: '${PROJECT}-${ENV}/${COMPONENT}:${TAGVERSION}'
              imagePullPolicy: IfNotPresent
              name: '${COMPONENT}'
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  memory: '${MEMORY_LIMIT}'
                requests:
                  memory: 100Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${COMPONENT}'
            from:
              kind: ImageStreamTag
              name: '${COMPONENT}:${TAGVERSION}'
              namespace: '${PROJECT}-${ENV}'
          type: ImageChange
parameters:
  - name: PROJECT
    displayName: Application
    description: The name of the application project.
    required: true
  - name: COMPONENT
    displayName: Component
    description: The name of the application component.
    required: true
  - name: ENV
    displayName: Environment
    description: The environment stage.
    required: true
  - name: BRANCH
    displayName: Branch
    description: The branch (either 'feature' or 'master').
    value: feature
    required: true
  - name: BRANCH
    displayName: Branch
    description: The branch (either 'feature' or 'master').
    value: feature
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maxiroutemum amount of memory the Node.js container can use.
    value: 1Gi
    required: true
  - name: TAGVERSION
    displayName: tag version
    description: The version to be used.
    required: true
