apiVersion: v1
kind: Template
labels:
  template: component-template
  app: '${PROJECT}-${COMPONENT}'
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[]'
      name: '${COMPONENT}'
    spec:
      ports:
      -   name: 8000-tcp
          port: 8000
          protocol: TCP
          targetPort: 8000
      -   name: 8001-tcp
          port: 8001
          protocol: TCP
          targetPort: 8001
      -   name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
      -   name: 8444-tcp
          port: 8444
          protocol: TCP
          targetPort: 8444
      selector:
        app: '${PROJECT}-${COMPONENT}'
        deploymentconfig: '${COMPONENT}'
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: '${COMPONENT}'
    spec:
      dockerImageRepository: '${COMPONENT}'
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${COMPONENT}
    spec:
      completionDeadlineSeconds: ${COMPLETION_DEADLINE_SECONDS}
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${COMPONENT}:${TAGVERSION}
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        type: Binary
        binary: {}
      strategy:
        type: Docker
        dockerStrategy: {}
      successfulBuildsHistoryLimit: 5
      triggers: []
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: '${COMPONENT}'
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: '${PROJECT}-${COMPONENT}'
        deploymentconfig: '${COMPONENT}'
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: '${PROJECT}-${COMPONENT}'
            deploymentconfig: '${COMPONENT}'
            env: '${ENV}'
        spec:
          containers:
            - image: '${PROJECT}-${ENV}/${COMPONENT}:${TAGVERSION}'
              imagePullPolicy: IfNotPresent
              name: '${COMPONENT}'
              ports:
                - containerPort: 8000
                  protocol: TCP
                - containerPort: 8001
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
                - containerPort: 8444
                  protocol: TCP
              resources:
                limits:
                  memory: '${MEMORY_LIMIT}'
                requests:
                  memory: '${MEMORY_REQUEST}'
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${COMPONENT}'
            from:
              kind: ImageStreamTag
              name: '${COMPONENT}:${TAGVERSION}'
              namespace: '${PROJECT}-${ENV}'
          type: ImageChange
parameters:
  - name: PROJECT
    displayName: Application
    description: The name of the application project.
    required: true
  - name: COMPONENT
    displayName: Component
    description: The name of the application component.
    required: true
  - name: ENV
    displayName: Environment
    description: The environment stage.
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory available for the container.
    value: 512Mi
    required: true
  - name: MEMORY_REQUEST
    displayName: Memory Request
    description: Minimum amount of memory requested for the container.
    value: 256Mi
    required: true
  - name: TAGVERSION
    displayName: tag version
    description: The version to be used.
    value: latest
    required: true
  - name: COMPLETION_DEADLINE_SECONDS
    displayName: Completion Deadline Seconds
    description: how long the docker build of the component can last before it is canceled
    value: "1800"
    required: true

