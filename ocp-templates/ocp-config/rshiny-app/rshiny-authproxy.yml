apiVersion: v1
kind: Template
labels:
  template: rshiny-authproxy
  app: '${PROJECT}-${COMPONENT}'
parameters:
- description: The name of the application project.
  displayName: Project
  name: PROJECT
  required: true
- description: The name of the component
  displayName: Component
  name: COMPONENT
  required: true
- description: The environment stage.
  displayName: Environment
  name: ENV
  required: true
- description: Session secret.
  displayName: Session secret
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: SESSION_SECRET
  required: true
- name: NEXUS_PASSWORD
  value: NEXUS_PASSWORD
  required: true
- description: The application domain
  displayName: app domain
  name: OD_OCP_SOURCE_APP_DOMAIN
  required: true

objects:

  - apiVersion: v1
    data:
      password: '${NEXUS_PASSWORD}'
    kind: Secret
    metadata:
      name: nexus
    type: opaque

  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ${COMPONENT}-auth-proxy
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${COMPONENT}"}}'

  - apiVersion: v1
    kind: Route
    metadata:
      name: ${COMPONENT}
    spec:
      host: ${COMPONENT}-${PROJECT}-${ENV}.${OD_OCP_SOURCE_APP_DOMAIN}
      to:
        kind: Service
        name: ${COMPONENT}-auth-proxy
      tls:
        termination: Reencrypt

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${COMPONENT}-auth-proxy
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: ${COMPONENT}-auth-proxy-tls
    spec:
      ports:
      - name: ${COMPONENT}-auth-proxy
        port: 443
        targetPort: 8443
      selector:
        app: ${COMPONENT}-auth-proxy

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${COMPONENT}-auth-proxy
      deploymentconfig: ${COMPONENT}-auth-proxy
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${COMPONENT}-auth-proxy
      template:
        metadata:
          labels:
            app: ${COMPONENT}-auth-proxy
            deploymentconfig: ${COMPONENT}-auth-proxy
            env: ${ENV}
        spec:
          serviceAccountName: ${COMPONENT}-auth-proxy
          containers:
          - name: oauth-proxy
            image: openshift/oauth-proxy:latest
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 8443
              protocol: TCP
              name: public
            args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-service-account=${COMPONENT}-auth-proxy
            - --upstream=http://${COMPONENT}.${PROJECT}-${ENV}.svc.cluster.local:8080
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=${SESSION_SECRET}
            - >-
              --openshift-sar={"namespace":"${PROJECT}-${ENV}","resource":"services","name":"${COMPONENT}-auth-proxy","verb":"get"}
            volumeMounts:
            - mountPath: /etc/tls/private
              name: ${COMPONENT}-auth-proxy-tls
          volumes:
          - name: ${COMPONENT}-auth-proxy-tls
            secret:
              secretName: ${COMPONENT}-auth-proxy-tls
